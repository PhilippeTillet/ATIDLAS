# Python package
# Create and test a Python package on multiple Python versions.
# Add steps that analyze code, save the dist with the build record, publish to a PyPI-compatible index, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/python

trigger:
- master

pool:
  name: default

variables:
- name: venv
  value: venv

strategy:
  matrix:
    Python37:
      python.version: '3.7'
  maxParallel: 1

steps:
- task: UsePythonVersion@0
  inputs:
    versionSpec: '$(python.version)'
    architecture: 'x64'
  displayName: 'Use Python $(python.version)'

- script: |
    mkdir $(venv)
    python -m virtualenv $(venv)
    source $(venv)/bin/activate
    which python
  displayName: setup virtual environment

- script: |
    python -m pip install --upgrade pip
    pip install torch
  displayName: 'Install dependencies'

- script: |
    cd python
    python setup.py install
  displayName: 'Install Triton'

- script: |
    pytest .
  displayName: 'Python Unit Tests'